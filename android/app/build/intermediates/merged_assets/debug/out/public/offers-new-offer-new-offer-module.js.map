{"version":3,"sources":["webpack:///./src/app/page/places/offers/new-offer/new-offer.module.ts","webpack:///./src/app/page/places/offers/new-offer/new-offer.page.html","webpack:///./src/app/page/places/offers/new-offer/new-offer.page.scss","webpack:///./src/app/page/places/offers/new-offer/new-offer.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACM;AACE;AAEV;AAEG;AAEhD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,4DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,+rBAA+rB,6DAA6D,8hBAA8hB,yEAAyE,0jBAA0jB,6DAA6D,ugBAAugB,4IAA4I,07BAA07B,yIAAyI,m4B;;;;;;;;;;;ACAhrH,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACO;AACf;AAEZ;AACU;AACf;AAOpC;IAKE,sBACU,YAA2B,EAC3B,MAAc,EACd,WAA8B;QAF9B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QANxC,cAAS,GAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC9B,UAAK,GAAG,IAAI,iDAAY,EAAE,CAAC;IAM/B,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAkCC;QAjCC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC3B,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;iBACpB;aACF,CAAC;YACF,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACjC,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC1B;aACF,CAAC;YACF,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC3B,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClB;aACF,CAAC;YACF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACnC,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;iBACpB;aACF,CAAC;YACF,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACjC,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;iBACpB;aACF,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC,CAAC;IACnG,CAAC;IACD,oCAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACpB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,OAAO,EAAE,mBAAmB;SAC7B,CAAC;aACD,IAAI,CAAC,mBAAS;YACb,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACpD,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;gBACjD,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAU,GAAV;QACE,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACtD,OAAO,OAAO,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAvEU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,wHAAoC;;SAErC,CAAC;yCAOwB,6DAAa;YACnB,sDAAM;YACD,gEAAiB;OAR7B,YAAY,CAwExB;IAAD,mBAAC;CAAA;AAxEwB","file":"offers-new-offer-new-offer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewOfferPage } from './new-offer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewOfferPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NewOfferPage]\n})\nexport class NewOfferPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/places/tabs/offers\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>New Offer</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"onCreateOffer()\\\" [disabled]=\\\"!form.valid || !datesValid()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-grid>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': !form.get('title').valid && form.get('title').touched}\\\">Title</ion-label>\\n            <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"title\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!form.get('title').valid && form.get('title').touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': !form.get('description').valid && form.get('description').touched}\\\">Short Description</ion-label>\\n            <ion-textarea rows=\\\"3\\\" formControlName=\\\"description\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!form.get('description').valid && form.get('description').touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              Description must be between 1 to 180\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': !form.get('price').valid && form.get('price').touched}\\\">Price</ion-label>\\n            <ion-input type=\\\"number\\\" formControlName=\\\"price\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!form.get('price').valid && form.get('price').touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': (form.controls.availableFrom?.invalid || !datesValid() && form.controls.availableTo?.dirty) && form.controls.availableFrom?.touched }\\\">\\n              Available from</ion-label>\\n            <ion-datetime \\n            display-format=\\\"YYYY-MM-DD\\\" \\n            picker-format=\\\"YYYY MMM DD\\\" \\n            min=\\\"2019-01-01\\\"\\n            max=\\\"2025-12-31\\\"\\n            formControlName=\\\"availableFrom\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!form.get('availableFrom').valid && form.get('availableFrom').touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!datesValid() && form.controls.availableFrom?.valid && form.controls.availableTo?.dirty\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              The start date must be before the end date\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': (form.controls.availableTo?.invalid || !datesValid() && form.controls.availableFrom?.dirty) && form.controls.availableTo?.touched}\\\">\\n              Available to</ion-label>\\n            <ion-datetime\\n            display-format=\\\"YYYY-MM-DD\\\" \\n            picker-format=\\\"YYYY MMM DD\\\" \\n            [min]=\\\"startDate\\\" \\n            max=\\\"2025-12-31\\\" \\n            formControlName=\\\"availableTo\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!form.get('availableTo').valid && form.get('availableTo').touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!datesValid() && form.controls.availableTo?.valid && form.controls.availableFrom?.dirty\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              The end date must be after the start date\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-grid>\\n  </form>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvcGxhY2VzL29mZmVycy9uZXctb2ZmZXIvbmV3LW9mZmVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PlacesService } from '../../places.service';\nimport { Place } from '../../place';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-new-offer',\n  templateUrl: './new-offer.page.html',\n  styleUrls: ['./new-offer.page.scss'],\n})\nexport class NewOfferPage implements OnInit, OnDestroy {\n  form: FormGroup;\n  startDate =  new Date().toISOString();\n  private _subs = new Subscription();\n\n  constructor(\n    private placeService: PlacesService,\n    private router: Router,\n    private loadingCtrl: LoadingController\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      description: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required,\n          Validators.maxLength(180),\n        ]\n      }),\n      price: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required,\n          Validators.min(1),\n        ]\n      }),\n      availableFrom: new FormControl(null, {\n        validators: [\n          Validators.required,\n        ]\n      }),\n      availableTo: new FormControl(null, {\n        validators: [\n          Validators.required,\n        ]\n      }),\n    });\n    this._subs.add(this.form.controls.availableFrom.valueChanges.subscribe(v => this.startDate = v));\n  }\n  onCreateOffer() {\n    if (!this.form.valid) {\n      return;\n    }\n    this.loadingCtrl.create({\n      message: 'Creating offer...'\n    })\n    .then(loadingEl => {\n      loadingEl.present();\n      this.placeService.addPlace(this.form.value).subscribe(() => { // we dont need to clear this subs because the observable use take(1)\n        this.form.reset();\n        this.router.navigateByUrl('/places/tabs/offers');\n        this.loadingCtrl.dismiss();\n      });\n    });\n  }\n\n  datesValid(): boolean {\n    const startDate = new Date(this.form.value.availableFrom);\n    const endDate = new Date(this.form.value.availableTo);\n    return endDate > startDate;\n  }\n\n  ngOnDestroy() {\n    this._subs.unsubscribe();\n  }\n}\n"],"sourceRoot":""}
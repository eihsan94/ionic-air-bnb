{"version":3,"sources":["webpack:///./src/app/page/bookings/create-booking/create-booking.component.html","webpack:///./src/app/page/bookings/create-booking/create-booking.component.scss","webpack:///./src/app/page/bookings/create-booking/create-booking.component.ts","webpack:///./src/app/page/places/discover/place-detail/place-detail.module.ts","webpack:///./src/app/page/places/discover/place-detail/place-detail.page.html","webpack:///./src/app/page/places/discover/place-detail/place-detail.page.scss","webpack:///./src/app/page/places/discover/place-detail/place-detail.page.ts"],"names":[],"mappings":"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","file":"discover-place-detail-place-detail-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title padding>{{ selectedPlace.title}}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button margin (click)=\\\"onCancel()\\\">\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content text-center padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onBookPlace()\\\">\\n\\n    <ion-grid>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': f.controls.firstname?.invalid && f.controls.firstname?.touched}\\\">First Name</ion-label>\\n            <ion-input type=\\\"text\\\" ngModel name=\\\"firstname\\\" required></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"f.controls.firstname?.invalid && f.controls.firstname?.touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': f.controls.lastName?.invalid && f.controls.lastName?.touched}\\\">Last Name</ion-label>\\n            <ion-input type=\\\"lastName\\\" ngModel name=\\\"lastName\\\" required></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"f.controls.lastName?.invalid && f.controls.lastName?.touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': f.controls.guestNumber?.invalid && f.controls.guestNumber?.touched}\\\">Number of Guests</ion-label>\\n            <ion-select [ngModel]=\\\"'2'\\\" name=\\\"guestNumber\\\" required>\\n              <ion-select-option value=\\\"1\\\">1</ion-select-option>\\n              <ion-select-option value=\\\"2\\\">2</ion-select-option>\\n              <ion-select-option value=\\\"2\\\">3</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"f.controls.guestNumber?.invalid && f.controls.guestNumber?.touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row> \\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': (f.controls.date_from?.invalid || !datesValid() && f.controls.date_to?.dirty) && f.controls.date_from?.touched }\\\">From</ion-label>\\n            <ion-datetime \\n            display-format=\\\"YYYY-MM-DD\\\" \\n            picker-format=\\\"YYYY MMM DD\\\" \\n            [min]=\\\"selectedPlace.availableFrom.toISOString()\\\" \\n            [max]=\\\"selectedPlace.availableTo.toISOString()\\\" \\n            [ngModel]=\\\"startDate\\\" \\n            name=\\\"date_from\\\" \\n            #startDateCtrl=\\\"ngModel\\\"\\n              required></ion-datetime>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"f.controls.date_from?.invalid && f.controls.date_from?.touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!datesValid() && f.controls.date_from?.valid && f.controls.date_to?.dirty\\\" lines=\\\"none\\\">\\n              <div class=\\\"err\\\">\\n                The start date must be before the end date\\n              </div>\\n            </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      \\n      <ion-row>\\n        <ion-col size-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': (f.controls.date_to?.invalid || !datesValid() && f.controls.date_from?.dirty) && f.controls.date_to?.touched}\\\">To</ion-label>\\n            <ion-datetime \\n            display-format=\\\"YYYY-MM-DD\\\" \\n            picker-format=\\\"YYYY MMM DD\\\" \\n            [min]=\\\"startDateCtrl.value\\\" \\n            [max]=\\\"selectedPlace.availableTo.toISOString()\\\" \\n            [ngModel]=\\\"endDate\\\" \\n            name=\\\"date_to\\\" \\n            required>\\n          </ion-datetime>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"f.controls.date_to?.invalid && f.controls.date_to?.touched\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              This is required\\n            </div>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!datesValid() && f.controls.date_to?.valid && f.controls.date_from?.dirty\\\" lines=\\\"none\\\">\\n            <div class=\\\"err\\\">\\n              The end date must be after the start date\\n            </div>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button [disabled]=\\\"f.invalid || !datesValid()\\\" color=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\" type=\\\"submit\\\">\\n            Book!\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-grid>\\n\\n  </form>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvYm9va2luZ3MvY3JlYXRlLWJvb2tpbmcvY3JlYXRlLWJvb2tpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Place } from '../../places/place';\nimport { ModalController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { Booking } from '../booking';\n\n@Component({\n  selector: 'app-create-booking',\n  templateUrl: './create-booking.component.html',\n  styleUrls: ['./create-booking.component.scss']\n})\nexport class CreateBookingComponent implements OnInit {\n  @Input() selectedPlace: Place;\n  @Input() selectedMode: 'select' | 'random';\n  @ViewChild('f') form: NgForm;\n  startDate: string;\n  endDate: string;\n  constructor(\n    private modalCtrl: ModalController\n  ) { }\n\n  ngOnInit() {\n    const availableFrom: Date = new Date(this.selectedPlace.availableFrom);\n    const availableTo: Date = new Date(this.selectedPlace.availableTo);\n    // generating random date\n    if (this.selectedMode === 'random') {\n      this.startDate =\n        new Date(availableFrom.getTime() + Math.random() * (availableTo.getTime() - 7 * 24 *  60 * 60 * 1000 - availableFrom.getTime()))\n        .toISOString();\n      this.endDate =\n        new Date(\n          new Date(this.startDate).getTime() + Math.random() *\n          (new Date(this.startDate).getTime() + 6 * 24 *  60 * 60 * 1000 - new Date(this.startDate).getTime())\n        ).toISOString();\n    }\n  }\n\n  onCancel() {\n    this.modalCtrl.dismiss(null, 'cancel'); // this.modalCtrl.dismiss(dataToPassBack, role)\n  }\n\n  onBookPlace() {\n    if (!this.form.valid || !this.datesValid()) {\n      return;\n    }\n    const newBooking: Booking = this.form.value;\n    newBooking.bookedFrom = new Date(this.form.value.bookedFrom);\n    newBooking.bookedTo = new Date(this.form.value.bookedTo);\n    this.modalCtrl.dismiss({bookingData: newBooking}, 'confirm');\n  }\n\n  datesValid(): boolean {\n    const startDate = new Date(this.form.value.date_from);\n    const endDate = new Date(this.form.value.date_to);\n    return endDate > startDate;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlaceDetailPage } from './place-detail.page';\nimport { CreateBookingComponent } from 'src/app/page/bookings/create-booking/create-booking.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaceDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    PlaceDetailPage,\n    CreateBookingComponent\n  ], // we declare this here because we want use the create booking component here\n  entryComponents: [\n    CreateBookingComponent,\n  ],\n})\nexport class PlaceDetailPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <!-- \\n      <ion-back-button></ion-back-button> :  this contains the back click  event with the icon embedded\\n      defaultHref=\\\"/places/tabs/discover\\\":  if the page is reloaded it will still have the default routes that can help it navigate back\\n       -->\\n      <ion-back-button defaultHref=\\\"/places/tabs/discover\\\"></ion-back-button> \\n    </ion-buttons>\\n    <ion-title>{{ isLoading? 'Loading...' : place?.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"isLoading\\\" text-center>\\n    <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n  <ion-grid no-padding *ngIf=\\\"!isLoading\\\">\\n    <ion-row>\\n      <ion-col size-sm=\\\"6\\\" offset-sm=3 no-padding>\\n        <ion-img [src]=\\\"place?.imageUrl\\\"></ion-img>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=3 text-center padding>\\n          <p>{{ place?.description }}</p>\\n        </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"isBookable\\\">\\n        <ion-col size-sm=\\\"6\\\" offset-sm=3 text-center>\\n          <ion-button color=\\\"primary\\\" margin (click)=\\\"onBookPlace()\\\">Book</ion-button>\\n        </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvcGxhY2VzL2Rpc2NvdmVyL3BsYWNlLWRldGFpbC9wbGFjZS1kZXRhaWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NavController, ModalController, ActionSheetController, LoadingController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlacesService } from '../../places.service';\nimport { Place } from '../../place';\nimport { ModalOptions } from '@ionic/core';\nimport { CreateBookingComponent } from 'src/app/page/bookings/create-booking/create-booking.component';\nimport { Subscription } from 'rxjs';\nimport { BookingsService } from 'src/app/page/bookings/bookings.service';\nimport { Booking } from 'src/app/page/bookings/booking';\nimport { AuthService } from 'src/app/page/auth/auth.service';\n\n@Component({\n  selector: 'app-place-detail',\n  templateUrl: './place-detail.page.html',\n  styleUrls: ['./place-detail.page.scss'],\n})\nexport class PlaceDetailPage implements OnInit, OnDestroy {\n  place: Place;\n  isBookable: boolean;\n  isLoading = false;\n  private _placesSub = new Subscription();\n\n  constructor(\n    private navCtrl: NavController,\n    private activatedRoute: ActivatedRoute,\n    private placesService: PlacesService,\n    private authService: AuthService,\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private bookingsService: BookingsService,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private router: Router,\n\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(\n      paramMap => {\n        this.isLoading = true;\n        !paramMap.has('placeId') ? this.navCtrl.navigateBack('/places/tabs/discover') :\n        this._placesSub.add(this.placesService.getPlace(paramMap.get('placeId')).subscribe( p => {\n          this.place = p;\n          this.isBookable = p.userId !== this.authService.userId;\n          this.isLoading = false;\n        },\n        err => {\n          this.alertCtrl.create({\n            header: 'An Error Occured!',\n            message: 'Data could not be fetched, Please try again later!',\n            buttons: [{\n              text: 'Okay',\n              handler: () => {\n                this.router.navigateByUrl('/places/tabs/discover');\n              }\n            }],\n          })\n          .then(alertEl => {\n            alertEl.present();\n          })\n        }\n        ))\n      }\n    );\n  }\n\n  onBookPlace() {\n    // this.navCtrl.navigateBack('/places/tabs/discover'); // this will navigate with correct animations\n    this.actionSheetCtrl.create({\n      header: 'Choose an Action',\n      buttons: [\n        {\n          text: 'Select Date',\n          handler: () => {\n            this.openBookingModal('select');\n          }\n        },\n        {\n          text: 'Random Date',\n          handler: () => {\n            this.openBookingModal('random');\n          }\n        },\n        {\n          text: 'cancel',\n          role: 'cancel',\n        },\n      ]\n    })\n    .then(\n      actionSheetEl => {\n        actionSheetEl.present();  // showing the action sheet\n    });\n  }\n\n  openBookingModal(mode: 'select' | 'random') { // ts stating that the value of the mode should be selecet or random only\n    console.log(mode);\n    const opts: ModalOptions =  {\n      component: CreateBookingComponent,\n      componentProps: {selectedPlace: this.place, selectedMode: mode},\n    };\n    this.modalCtrl.create(opts) // this is the created method\n    .then(modalEl => {\n      modalEl.present(); // this is the show modal method\n      return modalEl.onDidDismiss(); // after close modal method\n    })\n    .then(resultData => {\n      console.log(resultData.data);\n      if (resultData.role === 'confirm') {\n        this.loadingCtrl.create({message: 'Booking your place...'}).then(loadingEl => {\n          loadingEl.present();\n          const data: Booking  = resultData.data.bookingData;\n          const newBooking = new Booking(\n            this.place.id,\n            this.place.title,\n            this.authService.userId,\n            this.place.title,\n            this.place.imageUrl,\n            data.firstName,\n            data.lastName,\n            data.guestNumber,\n            data.bookedFrom,\n            data.bookedTo,\n          );\n          this.bookingsService.addBooking(newBooking).subscribe(() => {\n            loadingEl.dismiss();\n          });\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._placesSub.unsubscribe();\n  }\n}\n"],"sourceRoot":""}
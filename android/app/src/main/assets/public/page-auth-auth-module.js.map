{"version":3,"sources":["webpack:///./src/app/page/auth/auth.module.ts","webpack:///./src/app/page/auth/auth.page.html","webpack:///./src/app/page/auth/auth.page.scss","webpack:///./src/app/page/auth/auth.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,8EAA8E,+BAA+B,mgBAAmgB,8DAA8D,qiBAAqiB,oEAAoE,g1BAAg1B,+BAA+B,+NAA+N,+BAA+B,oH;;;;;;;;;;;ACAp4E,+DAA+D,uI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AAChB;AACJ;AACU;AAQnD;IAIE,kBACU,WAAwB,EACxB,MAAc,EACd,WAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QANxC,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,IAAI,CAAC;IAMX,CAAC;IAEL,2BAAQ,GAAR;IACA,CAAC;IAED,0BAAO,GAAP;QAAA,iBAeC;QAdC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,gBAAgB;SAC1B,CAAC;aACD,IAAI,CAAC,mBAAS;YACb,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;YACrD,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,4BAA4B;SAC7B;aAAM;YACL,6BAA6B;SAC9B;IACH,CAAC;IACD,mCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IA1CU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2FAA+B;;SAEhC,CAAC;yCAMuB,yDAAW;YAChB,sDAAM;YACD,gEAAiB;OAP7B,QAAQ,CA2CpB;IAAD,eAAC;CAAA;AA3CoB","file":"page-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar text-center>\\n    <ion-title>{{ isLogin ? 'Login' : 'Signup'}} Page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <!-- default ionic spinner -->\\n  <!-- \\n  <ion-spinner name=\\\"crescent\\\" *ngIf=\\\"isLoading\\\"></ion-spinner> \\n  <ion-button color=\\\"primary\\\" (click)=\\\"onLogin()\\\" *ngIf=\\\"!isLoading\\\">\\n-->\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n    <ion-grid>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'err': f.controls.email?.invalid && f.controls.email?.touched}\\\">Email</ion-label>\\n              <ion-input \\n              type=\\\"text\\\"\\n              ngModel\\n              name=\\\"email\\\"\\n              required\\n              email\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item  *ngIf=\\\"f.controls.email?.invalid && f.controls.email?.touched\\\" lines=\\\"none\\\">\\n              <div class=\\\"err\\\">\\n                Should be a valid email address\\n              </div>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\"[ngClass]=\\\"{'err': f.controls.password?.invalid && f.controls.password?.touched}\\\">Password</ion-label>\\n              <ion-input \\n              type=\\\"password\\\"\\n              ngModel\\n              name=\\\"password\\\"\\n              required\\n              minlength=\\\"8\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item  *ngIf=\\\"f.controls.password?.invalid && f.controls.password?.touched\\\" lines=\\\"none\\\">\\n                <div class=\\\"err\\\">\\n                  Should be at least 8 characters long\\n                </div>\\n              </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button \\n          type=\\\"button\\\" \\n          color=\\\"primary\\\"\\n          fill=\\\"clear\\\"\\n          expand=\\\"block\\\"\\n          (click)=\\\"onSwitchAuthMode()\\\"\\n          >\\n            SWITCH TO {{ isLogin ? 'SIGNUP' : 'LOGIN'}}\\n          </ion-button>\\n          <ion-button \\n          [disabled] = \\\"f.invalid\\\" \\n          color=\\\"primary\\\" \\n          type=\\\"submit\\\" \\n          (click)=\\\"onLogin()\\\" \\n          expand=\\\"block\\\">\\n          {{ isLogin ? 'LOGIN' : 'SIGNUP'}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-grid>\\n\\n  </form>\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvYXV0aC9hdXRoLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    this.isLoading = true;\n    this.authService.login();\n    this.loadingCtrl.create({\n      keyboardClose: true,\n      message: 'logging in....'\n    })\n    .then(loadingEl => {\n      loadingEl.present();\n      setTimeout(() => { // imitating the time taken for the login request to finish\n        this.isLoading = false;\n        loadingEl.dismiss();\n        this.router.navigateByUrl('/places/tabs/discover');\n      }, 1500);\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    if (this.isLogin) {\n      // send req to login servers\n    } else {\n      // send req to signup servers\n    }\n  }\n  onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n}\n"],"sourceRoot":""}